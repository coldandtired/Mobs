package me.coldandtired.mobs;

public class Enums
{
	public enum EventType
	{//ATTACKED,
		BLOCKS,
		BURNS,
		CHANGES_BLOCK,
		CREATES_PORTAL,
		DAMAGED,
		DAWN,
		DIES,
		DUSK,
		DYED,
		ENTERS_AREA,
		EVOLVES,
		EXPLODES,
		GROWS_WOOL,
		HEALS,
		HIT,
		HIT_BY_PROJECTILE,
		HOUR_CHANGE,
		IN_AREA,
		LEAVES,
		LEAVES_AREA,
		MIDDAY,
		MIDNIGHT,
		NIGHT,
		PICKS_UP_ITEM,
		PLAYER_APPROACHES,
		PLAYER_DIES,
		PLAYER_JOINS,
		PLAYER_NEAR,
		PLAYER_SPAWNS,
		SHEARED,
		SPAWNS,
		SPLITS,
		TAMED,
		TARGETS,
		TELEPORTS,
		TIMER
	}
	
	enum ElementType 
	{  
		ACTION,
		AMOUNT,
		//AREA_NAME,
		CONDITION,
		DURATION,
		EFFECT,
		//EFFECT_TYPE,
		//ENCHANTMENT_ID, 
		//ENCHANTMENT_LEVEL, 
		ITEM_DATA, 
		ITEM_ID, 
		//LOCKED,
		MESSAGE,
		MOB, 		
		MOB_NAME,
		SIZE,
		SOUND,
		SOUND_PITCH,
		SOUND_VOLUME,
		SUB, 
		TARGET,
		TARGET_AMOUNT,
		TARGET_NAME,
		TARGET_X_OFFSET,
		TARGET_Y_OFFSET,
		TARGET_Z_OFFSET,
		VALUE,
		X, 
		Y, 
		Z 
	}
	
	enum ActionType
	{
		//TODO ACTIVATE_BUTTON?
		BROADCAST,
		CANCEL_EVENT,
		CAUSE,
		DAMAGE,
		GIVE,
		KILL,
		LOG,
		PLAY, 
		REMOVE,
		SET,
		SPAWN,
		TELL
	}
	
	enum SubactionType
	{
		ADULT,
		ALL_DROPS,
		ANGRY,
		ATTACK_POWER,
		BLOCK,
		CUSTOM_FLAG_1,
		CUSTOM_FLAG_2,
		CUSTOM_FLAG_3,
		CUSTOM_FLAG_4,
		CUSTOM_FLAG_5,
		CUSTOM_FLAG_6,
		CUSTOM_FLAG_7,
		CUSTOM_FLAG_8,
		CUSTOM_FLAG_9,
		CUSTOM_FLAG_10,
		CUSTOM_INT_1,
		CUSTOM_INT_2,
		CUSTOM_INT_3,
		CUSTOM_INT_4,
		CUSTOM_INT_5,
		CUSTOM_INT_6,
		CUSTOM_INT_7,
		CUSTOM_INT_8,
		CUSTOM_INT_9,
		CUSTOM_INT_10,
		CUSTOM_STRING_1,
		CUSTOM_STRING_2,
		CUSTOM_STRING_3,
		CUSTOM_STRING_4,
		CUSTOM_STRING_5,
		CUSTOM_STRING_6,
		CUSTOM_STRING_7,
		CUSTOM_STRING_8,
		CUSTOM_STRING_9,
		CUSTOM_STRING_10,
		DAMAGE_FROM_BLOCK_EXPLOSION,
		DAMAGE_FROM_CONTACT,
		DAMAGE_FROM_CUSTOM,
		DAMAGE_FROM_DROWNING,
		DAMAGE_FROM_ENTITY_ATTACK,
		DAMAGE_FROM_ENTITY_EXPLOSION,
		DAMAGE_FROM_FALL,
		DAMAGE_FROM_FALLING_BLOCK,
		DAMAGE_FROM_FIRE,
		DAMAGE_FROM_FIRE_TICK,
		DAMAGE_FROM_LAVA,
		DAMAGE_FROM_LIGHTNING,
		DAMAGE_FROM_MAGIC,
		DAMAGE_FROM_MELTING,
		DAMAGE_FROM_POISON,
		DAMAGE_FROM_PROJECTILE,
		DAMAGE_FROM_STARVATION,
		DAMAGE_FROM_SUFFOCATION,
		DAMAGE_FROM_SUICIDE,
		DAMAGE_FROM_VOID,
		DAMAGE_FROM_WITHER,
		DATA,
		DROPPED_EXP,
		DROPPED_ITEMS,		
		EFFECT,
	    EXP,
	    EXPLOSION,
		EXPLOSION_SIZE,
	    FIERY_EXPLOSION,
	    FRIENDLY,
	    HP,
	    ITEM,
	    ITEMS,
	    LEVEL,
	    LIGHTNING,
	    LIGHTNING_EFFECT,
	    MAX_HP,   
	    MAX_LIFE,
	    MOB,
	    MONEY,
	    NAME,
	    NO_BURN,	
		NO_CREATE_PORTALS,
		NO_DESTROY_BLOCKS,
		NO_DROPPED_EXP,
		NO_DROPPED_ITEMS,
		NO_DROPS,
		NO_DYED,
		NO_EVOLVE,		
		NO_FIERY_EXPLOSION,	
		NO_GRAZE,
		NO_GROW_WOOL,
		NO_HEAL,
		NO_MOVE_BLOCKS,
		NO_PICK_UP_ITEMS,
		NO_SADDLED,
		NO_SHEARING,
		NO_TAMING,
		NO_TELEPORT,    
	    OCELOT_TYPE,
		OPEN,
		OWNER,
		POWERED,
		SADDLED,
		SHEARED,
		SIZE,
	    SKIN,
	    SOUND,
	    SPLIT_INTO,
		TAMED,
		TIME,
		TITLE,
		VILLAGER_TYPE,
		WEATHER,
		WOOL
    }
		
	enum TargetType
	{ 
		APPROACHED_PLAYER,
		AREA,
		AROUND,
		ATTACKER,
		BLOCK,
		CLOSEST,
		KILLER,
		LEFT_PLAYER,
		NEAR_PLAYER,
		PLAYER,
		RANDOM,
		OWNER,
		SELF,
		SHEARER,
		TAMER,
		TARGETED,
	}
	
	enum ValueType
	{
		NO,
		RAINY,
		RANDOM,
		STORMY,
		SUNNY,
		TOGGLED,
		YES
	}
	
	enum ConditionType
	{
		CONDITION_TARGET,
		CONDITION_TARGET_NAME,
		CONDITION_TARGET_X,
		CONDITION_TARGET_Y,
		CONDITION_TARGET_Z,
		IF_ADULT, 
		IF_ANGRY,
		IF_AREA,
		IF_BIOME,
		IF_CUSTOM_FLAG_1,
		IF_CUSTOM_FLAG_2,
		IF_CUSTOM_FLAG_3,
		IF_CUSTOM_FLAG_4,
		IF_CUSTOM_FLAG_5,
		IF_CUSTOM_FLAG_6,
		IF_CUSTOM_FLAG_7,
		IF_CUSTOM_FLAG_8,
		IF_CUSTOM_FLAG_9,
		IF_CUSTOM_FLAG_10,
		IF_CUSTOM_STRING_1,
		IF_CUSTOM_STRING_2,
		IF_CUSTOM_STRING_3,
		IF_CUSTOM_STRING_4,
		IF_CUSTOM_STRING_5,
		IF_CUSTOM_STRING_6,
		IF_CUSTOM_STRING_7,
		IF_CUSTOM_STRING_8,
		IF_CUSTOM_STRING_9,
		IF_CUSTOM_STRING_10,
		IF_DEATH_CAUSE,
		IF_MOB,
		IF_NAME,
		IF_NOT_BIOME,
		IF_NOT_CUSTOM_STRING_1,
		IF_NOT_CUSTOM_STRING_2,
		IF_NOT_CUSTOM_STRING_3,
		IF_NOT_CUSTOM_STRING_4,
		IF_NOT_CUSTOM_STRING_5,
		IF_NOT_CUSTOM_STRING_6,
		IF_NOT_CUSTOM_STRING_7,
		IF_NOT_CUSTOM_STRING_8,
		IF_NOT_CUSTOM_STRING_9,
		IF_NOT_CUSTOM_STRING_10,
		IF_NOT_DEATH_CAUSE,
		IF_NOT_MOB,
		IF_NOT_NAME,
		IF_NOT_OCELOT,
		IF_NOT_OWNER,
		IF_NOT_PROJECTILE,
		IF_NOT_SPAWN_REASON,
		IF_NOT_STANDING_ON,
		IF_NOT_VILLAGER,
		IF_NOT_WOOL,
		IF_NOT_WORLD,
		IF_OCELOT,
		IF_OWNER,
		IF_POWERED,
		IF_PROJECTILE,
		IF_RAINING,
		IF_SADDLED,
		IF_SHEARED,
		IF_SPAWN_REASON,
		IF_STANDING_ON,
		IF_TAMED,
		IF_THUNDERING,
		IF_VILLAGER,
		IF_WOOL,
		IF_WORLD
		/*
		 * AREA_MOB_COUNT,
		BLOCK_LIGHT_LEVEL,
		CHUNK_MOB_COUNT,
		CUSTOM_INT_1,
		CUSTOM_INT_2,
		CUSTOM_INT_3,
		CUSTOM_INT_4,
		CUSTOM_INT_5,
		CUSTOM_INT_6,
		CUSTOM_INT_7,
		CUSTOM_INT_8,
		CUSTOM_INT_9,
		CUSTOM_INT_10,	
		KILLED_BY_PLAYER,
		LIGHT_LEVEL,
		LOCAL_TIME,
		LUNAR_PHASE,
		MOB_AGE,
		PLAYER_HAS_PERMISSION,
		PLAYER_IS_OP,
		PROJECTILE,
		ONLINE_PLAYER_COUNT,
		PERCENT,
		HOLDING,
		PLAYER_ITEM,
		PLAYER_MONEY,
		PLAYER_PERMISSION,
		WEARING,
		REGION_MOB_COUNT,
		REMAINING_LIFETIME,
		SKY_LIGHT_LEVEL,
		//time conditions
		WORLD_MOB_COUNT,
		WORLD_PLAYER,
		WORLD_TIME,
		WORLD_TYPE,
		X,
		Y,
		Z;
		 */
	}
	
	public enum ReasonType
	{
		BAD_AMOUNT,
		BAD_ITEM_ID,
		CANNOT_BE_OPENED,
		CANNOT_CANCEL_EVENT,
		CHUNK_NOT_LOADED,
		NO_ACTION,
		NO_EFFECT,
		NO_MATCHING_TARGET,
		NO_MESSAGE,
		NO_METADATA,
		NO_MOB,
		NO_PLAYER,
		NO_SOUND,
		NO_SPOUT,
		NO_SUBACTION,
		NO_TARGET,
		NO_VALUE,
		NO_VAULT,
		NO_WORLD,
		NO_X,
		NO_Y,
		NO_Z,
		NOT_A_CREEPER,
		NOT_A_PIG,
		NOT_A_SHEEP,
		NOT_A_TAMEABLE_MOB,
		NOT_AN_AGEABLE_MOB,
		NOT_AN_ANGERABLE_MOB,
		NOT_AN_EVENT_WITH_AN_ATTACKER,
		NOT_THE_APPROACHES_EVENT,
		NOT_THE_DIES_EVENT,
		NOT_THE_LEAVES_EVENT,
		NOT_THE_NEAR_EVENT,
		NOT_THE_SHEARS_EVENT,
		NOT_THE_TAMES_EVENT,
		NOT_THE_TARGETS_EVENT,
		Y_EXCEEDS_MAX_HEIGHT
	}

	public static boolean isActionType(String s)
	{
		for (ActionType at : ActionType.values())
		{
			if (at.toString().equalsIgnoreCase(s)) return true;
		}
		return false;
	}
	
	public static boolean isTargetType(String s)
	{
		for (TargetType tt : TargetType.values())
		{
			if (tt.toString().equalsIgnoreCase(s)) return true;
		}
		return false;
	}
	

	public enum MParam 
	{
		IGNORED_WORLD,
	//	NEARBY_MOBS,
		SPAWN_REASON,
	//	TIME,	
	}
			//HP_PER_SIZE,
			//INVINCIBILITY_TICKS,
}